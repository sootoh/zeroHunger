@page
@using ZeroHunger.Models
@model ZeroHunger.Pages.ViewReceiverAccountApplicationModel
@{
    <head>
        <title>Manage Receiver Account Application</title>
            <!-- Mobile Specific Metas -->
	        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
            <!-- Font-->
	        <link rel="stylesheet" type="text/css" href="../css/montserrat-font.css">
	        <link rel="stylesheet" type="text/css" href="../fonts/material-design-iconic-font/css/material-design-iconic-font.min.css">
	        <!-- Main Style Css -->
            <link rel="stylesheet" href="../css/style2.css"/>
            <style>
            table,th,td{
                border:solid 1px black;
            }
            th{
                padding:25px;
            }
            button
            {
                width:50%;
                font-size:larger;
                border-radius: 4px;
                border: none;
                padding-top:25px;
                padding-bottom:25px;
                opacity:0.85;
            }
            button:hover
            {
                opacity:1.0;
            }
            
        </style>
    </head>

    <body class="form-v10">
        <a asp-page="ManageReceiverAccountApplication">
            back
        </a>
        <h2>Applicant Info</h2>
        <table style="text-align:center;" class="form-v10-content">
            <tr>
                <th>IC no</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverIC)</td>
            </tr>
            <tr>
                <th>Name</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverName)</td>
            </tr>
            <tr>
                <th>Gender</th>
                <td>@getGender(Model.application.receiverGender)</td>
            </tr>
            <tr>
                <th>DOB</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverDOB) (@getAge(Model.application.receiverDOB) years old)</td>
            </tr>
            <tr>
                <th>Occupation</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverOccupation)</td>
            </tr>
            <tr>
                <th>Salary (RM)</th>
                <td>@Html.DisplayFor(SalaryGroup => Model.salaryGroups.ElementAt(Model.application.receiverSalaryGroupID).salaryRange)</td>
            </tr>
            <tr>
                <th>Email</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverEmail)</td>
            </tr>
            <tr>
                <th>Phone No.</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverPhone)</td>
            </tr>
            <tr>
                <th>Address</th>
                <td>@Html.DisplayFor(Receiver => Model.application.receiverAdrs1)
                    <br>@Html.DisplayFor(Receiver => Model.application.receiverAdrs2)</td>
            </tr>

        </table>
        <br>
        @if(Model.application.receiverFamilyNo==0)
        {
            <h4>This applicant live alone.</h4>
            
        }
        else
        {
            <h2>Family Info</h2>
            <table style="text-align:center;" class="form-v10-content">
                <tr>
                    <th>IC no</th>
                    <th>DOB</th>
                    <th>Occupation</th>
                    <th>Salary (RM)</th>              
                </tr>

                @foreach(ReceiverFamily familyInfo in Model.family)
                {
                    <tr>
                        <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyIC)</td>
                        <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyDOB)</td>
                        <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyOccupation)</td>
                        <td>@Html.DisplayFor(SalaryGroup => Model.salaryGroups.ElementAt(familyInfo.familySalaryGroupID).salaryRange)</td>
                    </tr>
                }
            
            </table>
        }
        
        
        <br>

        <div class="form-v10-content">
        <form class="form-detail" method="post">       
            <button asp-page="ApproveReceiverAccountApplication" asp-route-id ="@Model.application.receiverIC" style="background-color:lightgreen;">
                Approve</button>
            <button asp-page="RejectReceiverAccountApplication" asp-route-id="@Model.application.receiverIC" style="background-color:lightpink;">
                Reject</button>
        </form>
        </div>
    </body>

    @functions
    {
        public string getGender(char g)
        {
            if(g=='M')
            {
                return "Male";

            }
            else if(g=='F')
            {
                return "Female";
            }
            return "Unknown";
        }
        public int getAge(string DOB)
        {
            int birthyear=int.Parse(DOB.Substring(7));
            int thisyear = DateTime.Now.Year;
            thisyear %= 1000;
            thisyear %= 100;
            if(thisyear<birthyear)
            {
                thisyear += 100;
            }
            return thisyear - birthyear;
        }
    }
}
